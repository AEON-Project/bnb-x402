const fs = require('fs');
const path = require('path');

// The processing script after building the paywall application
const sourceDir = path.join(__dirname, '../typescript/packages/X402/src/paywall-app/dist');
const targetDir = path.join(__dirname, '../typescript/packages/X402/dist/paywall');
const htmlFilePath = path.join(sourceDir, 'index.html');
const paywallHtmlTsPath = path.join(__dirname, '../typescript/packages/X402/src/shared/paywall/paywallHtml.ts');

// Ensure that the target directory exists
if (!fs.existsSync(targetDir)) {
  fs.mkdirSync(targetDir, { recursive: true });
}

// Copy the build file
if (fs.existsSync(sourceDir)) {
  console.log('Copying paywall build files...');
  
  // Recursive copy function
  function copyRecursiveSync(src, dest) {
    const exists = fs.existsSync(src);
    const stats = exists && fs.statSync(src);
    const isDirectory = exists && stats.isDirectory();
    
    if (isDirectory) {
      if (!fs.existsSync(dest)) {
        fs.mkdirSync(dest);
      }
      fs.readdirSync(src).forEach(function(childItemName) {
        copyRecursiveSync(path.join(src, childItemName), path.join(dest, childItemName));
      });
    } else {
      fs.copyFileSync(src, dest);
    }
  }
  
  copyRecursiveSync(sourceDir, targetDir);
  console.log('Paywall build files copied successfully!');
  
  // Update the paywallHtml.ts file
  if (fs.existsSync(htmlFilePath)) {
    console.log('Updating paywallHtml.ts with built HTML content...');
    
    const htmlContent = fs.readFileSync(htmlFilePath, 'utf8');
    
    // Special characters in escaped strings
    const escapedHtml = htmlContent
      .replace(/\\/g, '\\\\')
      .replace(/"/g, '\\"')
      .replace(/\r\n/g, '\\r\\n')
      .replace(/\n/g, '\\n')
      .replace(/\r/g, '\\r');
    
    // Generate new TypeScript file content
    const tsContent = `// This file is auto-generated by build-paywall.js
// Do not edit manually - changes will be overwritten on next build

export const paywallHtml = "${escapedHtml}";
`;
    
    fs.writeFileSync(paywallHtmlTsPath, tsContent, 'utf8');
    console.log('paywallHtml.ts updated successfully!');
  } else {
    console.error('index.html not found in paywall dist directory');
  }
} else {
  console.error('Paywall dist directory not found:', sourceDir);
  process.exit(1);
}
